################################################################################
#
# Title:        ONTAP-53-02 - Protect Bucket
# Author:       NetApp Inc. (jont)
# Initial
# Create Date:  2025-04-14
# Description:  Backup (SnapMirror S3)
#               - Protect Bucket
#
# URLs:         https://docs.netapp.com/us-en/ontap/index.html
#               https://galaxy.ansible.com/netapp/ontap
#
# Built-in help:
# ansible-doc netapp.ontap.<module_name>
#
################################################################################

- hosts:                               "ontap"
  name:                                "ONTAP-53-02 - Protect Bucket"
  gather_facts:                        false
  vars_files:
    - ../../vars/{{ inventory_dir | split('/') | last }}/vars.yml
    - ../../vars/{{ inventory_dir | split('/') | last }}/vault.yml
  collections:
    - netapp.ontap
  module_defaults:
    group/netapp.ontap.netapp_ontap:
      hostname:                        "{{ ansible_host }}"
      username:                        "{{ ontap_admin_user }}"
      password:                        "{{ ontap_admin_password }}"
      https:                           true
      validate_certs:                  false
      use_rest:                        "always"

  pre_tasks:

  tasks:
    - name: Regenerate S3 root user access token
      netapp.ontap.na_ontap_s3_users:
        state: present
        name: "root"
        vserver: "{{ item.svm.name }}"
        regenerate_keys: true
      loop:
         "{{ protocols_s3_services }}"
      loop_control:
        label: "{{ item.svm.name }}"
      when:
        - protocols_s3_services | length > 0
        - item.name is defined
        - item.svm.name is regex('^ntap-svm.*')

    - name: Remove any preexisting snapmirror object store configuration on the SVM
      netapp.ontap.na_ontap_rest_cli:
        command: snapmirror/object-store/config
        verb: DELETE
        params:
          vserver: "{{ item.svm.name }}"
          object-store-name: "*"
      ignore_errors: yes
      loop:
         "{{ protocols_s3_services }}"
      loop_control:
        label: "{{ item.svm.name }}"

  post_tasks:

- hosts: "primary_storage_clusters"
  name:                                "ONTAP-53-02 - Protect Bucket"
  gather_facts:                        false
  vars_files:
    - ../../vars/{{ inventory_dir | split('/') | last }}/vars.yml
    - ../../vars/{{ inventory_dir | split('/') | last }}/vault.yml
  collections:
    - netapp.ontap
  module_defaults:
    group/netapp.ontap.netapp_ontap:
      hostname:                        "{{ ansible_host }}"
      username:                        "{{ ontap_admin_user }}"
      password:                        "{{ ontap_admin_password }}"
      https:                           true
      validate_certs:                  false
      use_rest:                        "always"

  pre_tasks:

  tasks:
  - name: Get primary site server-ca certificte
    netapp.ontap.na_ontap_restit:
      api: /security/certificates
      method: GET
      query:
        svm.name: "{{ global_primary_nas_svm }}"
        type: "server-ca"
        fields: "common_name,public_certificate"
    register: primary_certificate

  - name:
    set_fact:
      primary_cert:
        primary_common_name: "{{ primary_certificate.response.records[0].common_name }}"
        primary_name: "{{ primary_certificate.response.records[0].name }}"
        primary_public_certificate: "{{ primary_certificate.response.records[0].public_certificate }}"
    when:
      - primary_certificate.response.records[0].public_certificate is defined
    delegate_to: localhost
    delegate_facts: true

  post_tasks:

- hosts: "secondary_storage_clusters"
  name:                                "ONTAP-53-02 - Protect Bucket"
  gather_facts:                        false
  vars_files:
    - ../../vars/{{ inventory_dir | split('/') | last }}/vars.yml
    - ../../vars/{{ inventory_dir | split('/') | last }}/vault.yml
  collections:
    - netapp.ontap
  module_defaults:
    group/netapp.ontap.netapp_ontap:
      hostname:                        "{{ ansible_host }}"
      username:                        "{{ ontap_admin_user }}"
      password:                        "{{ ontap_admin_password }}"
      https:                           true
      validate_certs:                  false
      use_rest:                        "always"

  pre_tasks:

  tasks:

  - name: Retrieve primary site certificate facts from hostvars
    set_fact:
      primary_common_name: "{{ hostvars['localhost']['primary_cert']['primary_common_name'] }}"
      primary_name: "{{ hostvars['localhost']['primary_cert']['primary_name'] }}"
      primary_public_certificate: "{{ hostvars['localhost']['primary_cert']['primary_public_certificate'] }}"

  - name: Install primary server-ca certificate on backup svm
    netapp.ontap.na_ontap_security_certificates:
      common_name: "{{ primary_common_name }}"
      name: "{{ primary_name }}"
      public_certificate: "{{ primary_public_certificate }}"
      type: server_ca
      svm: "{{ global_primary_backup_svm }}"

  - name: Get secondary site server-ca certificte
    netapp.ontap.na_ontap_restit:
      api: /security/certificates
      method: GET
      query:
        svm.name: "{{ global_primary_backup_svm }}"
        type: "server-ca"
        fields: "common_name,public_certificate"
    register: backup_certificate

  - name:
    set_fact:
      backup_common_name: "{{ backup_certificate.response.records[0].common_name }}"
      backup_name: "{{ backup_certificate.response.records[0].name }}"
      backup_public_certificate: "{{ backup_certificate.response.records[0].public_certificate }}"
    when:
      - backup_certificate.response.records[0].public_certificate is defined

  - name: Store secondary site certificate facts in hostvars
    set_fact:
      secondary_cert:
        backup_common_name: "{{ backup_common_name }}"
        backup_name: "{{ backup_name }}"
        backup_public_certificate: "{{ backup_public_certificate }}"
    delegate_to: localhost
    delegate_facts: true

- hosts: "primary_storage_clusters"
  name:                                "ONTAP-53-02 - Protect Bucket"
  gather_facts:                        false
  vars_files:
    - ../../vars/{{ inventory_dir | split('/') | last }}/vars.yml
    - ../../vars/{{ inventory_dir | split('/') | last }}/vault.yml
  collections:
    - netapp.ontap
  module_defaults:
    group/netapp.ontap.netapp_ontap:
      hostname:                        "{{ ansible_host }}"
      username:                        "{{ ontap_admin_user }}"
      password:                        "{{ ontap_admin_password }}"
      https:                           true
      validate_certs:                  false
      use_rest:                        "always"

  pre_tasks:

  tasks:
  - name: Retrieve primary site certificate facts from hostvars
    set_fact:
      backup_common_name: "{{ hostvars['localhost']['secondary_cert']['backup_common_name'] }}"
      backup_name: "{{ hostvars['localhost']['secondary_cert']['backup_name'] }}"
      backup_public_certificate: "{{ hostvars['localhost']['secondary_cert']['backup_public_certificate'] }}"

  - name: Install backup server-ca certificate on primary svm
    netapp.ontap.na_ontap_security_certificates:
      common_name: "{{ backup_common_name }}"
      name: "{{ backup_name }}"
      public_certificate: "{{ backup_public_certificate }}"
      type: server_ca
      svm: "{{ global_primary_nas_svm }}"

  - name: Create SnapMirror S3 relationship
    netapp.ontap.na_ontap_rest_cli:
      command: snapmirror
      verb: POST
      body:
        source_path: "{{ global_primary_nas_svm }}:/bucket/{{ ontap_53_s3_bucket_name }}"
        destination_path: "{{ global_primary_backup_svm }}:/bucket/{{ ontap_53_s3_bucket_name }}"
        policy: "{{ ontap_53_policy_name }}"

  post_tasks:
